#!/bin/bash
set -e
FEATURE_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
FEATURE_ID="$(basename "${FEATURE_PATH}")"
ACTION_URL="https://github.com/actions/setup-java/archive/refs/tags/v3.0.0.tar.gz"

# Import common utils
. "${FEATURE_PATH}/../../common/utils.sh"
. "${FEATURE_PATH}/../../common/action-shim.sh"

set_var_to_option_value "${FEATURE_ID}" buildmode build_mode "devcontainer"
set_var_to_option_value "${FEATURE_ID}" profile_d profile_d "/usr/local/etc/dev-container-features/profile.d"
set_var_to_option_value "${FEATURE_ID}" targetpath target_path "/usr/local"
set_var_to_option_value "${FEATURE_ID}" version version "latest"

# Set version, architecture variable action expects
if [ "${version}" = "latest" ]; then
    version="*"
fi
export _BUILD_ARG_SETUP_JAVA_JAVA_VERSION="${version}"
architecture="$(dpkg --print-architecture)"
case "${architecture}" in
    amd64) architecture="x64";
        ;;
    arm64) architecture="aarch64";
        ;;
    i386 | i686) architecture="x86";
        ;;
esac
export _BUILD_ARG_SETUP_JAVA_ARCHITECTURE="${architecture}"

# Skip if already run with same args - handle caching
marker_path="${target_path}/etc/dev-container-features/markers/github.com/chuxel/devcontainer-features/${FEATURE_ID}-${SCRIPT_NAME}.marker"
if ! check_marker "${marker_path}" "${target_path}" "${version}" "${install_tools}" "${build_mode}"; then
    echo "Java ${version} already installed. Skipping..."
    exit 0
fi

# Run the GitHub Action
run_action "${FEATURE_ID}" "${ACTION_URL}" "${target_path}" "${profile_d}"

# Link to bin
out_dir="$(find "${target_path}"/Java*/*/* -maxdepth 0 -type d)"
ln -s "${out_dir}"/bin/* "${target_path}/bin/"

# Clean up
rm -rf /tmp/action-shim

update_marker "${marker_path}" "${target_path}" "${version}" "${install_tools}" "${build_mode}"
